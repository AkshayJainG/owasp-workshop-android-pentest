<resources>
    <string name="app_name">Android Workshop</string>
    <string name="navigation_drawer_open">Open</string>
    <string name="navigation_drawer_close">Close</string>
    <string name="action_settings">Settings</string>
    <string name="section_format">Hello World from section: %1$d</string>
    <string name="superhiddenstring">Can you find this string in the app?</string>

    <string name="challenge_button">Click Me</string>
    <string name="challenge_result_description">Output:</string>
    <string name="challenge_no_data">No data fetched!</string>
    <string name="challenge_ip_headline">OWASP VM Domainname:</string>
    <string name="challenge_password">Enter your password here</string>

    <string name="challenge_get_used_to_the_tools">Get used to the Tools</string>
    <string name="challenge_get_used_to_the_tools_description">
        In your VM you will find different tools such as adb, apktool, dex2jar, drozer or  JD-GUI.
        In the first step you should have a look at the man pages for those or take a look at the
        tool\'s website.\n\nPlease then continue with the following:\n
        1. Download this application from the device.\n
        2. Get the smali code\n
        3. Try to decompile the application in order to retrieve the source code.\n
    </string>

    <string name="challenge_hidden_things">Hidden Things</string>
    <string name="challenge_hidden_things_description">
        This page displays a string once you click the below button.
        Your task is to find the string reference in the decompiled application.
    </string>

    <string name="challenge_logcat_output">Logcat Output</string>
    <string name="challenge_logcat_output_description">
        The following page ist used by the application to generate logcat output.
        Your task is to retrieve the output which holds a secret key!\n
        Start with the challenge by clicking the below button.
    </string>
    <string name="challenge_logcat_output_hint">
        Hint: Try to retrieve the key via logcat and no other tools.
    </string>
    <string name="challenge_logcat_output_status">
        The logcat should now contain some messages for you!
    </string>

    <string name="challenge_basic_http_request">Basic HTTP Request</string>
    <string name="challenge_basic_http_request_description">
        The following page is used by the application to generate a simple HTTP request.
        Your task is to intercept the request!\nStart with the challenge by clicking the below button.
    </string>

    <string name="challenge_basic_https_request">Basic HTTPS Request</string>
    <string name="challenge_basic_https_request_description">
        The following page is used by the application to generate a simple HTTP request which also
        used SSL/TLS. Your task is to intercept the request!\nStart with the challenge by clicking
        the below button.
    </string>

    <string name="challenge_ssl_pinning">SSL Pinning</string>
    <string name="challenge_ssl_pinning_description">
        The following page is used by the application to generate a simple HTTP request which also
        used SSL/TLS. But this time additional security features are enabled. Your task is to intercept
        the request!\nStart with the challenge by clicking the below button.
    </string>

    <string name="challenge_authorised_area">Authorised Area</string>
    <string name="challenge_authorised_area_description">
        Can you login?
    </string>
    <string name="challenge_authorised_area_hint">
        Hint: Sometimes you do not have to know the password.
    </string>
    <string name="challenge_authorised_area_description_2">
        You did it! Well done!
    </string>

    <string name="challenge_auth_brute">Auth Brute</string>
    <string name="challenge_auth_brute_description">
        This page represents a simple login mechanism. Your task is to bypass the login by guessing
        the correct password.
    </string>
    <string name="challenge_auth_brute_hint">
        Hint: Can you guess the intent of this? The password is between 1-100.000.
    </string>

    <string name="challenge_root_detection_bypass">Root Detection Bypass</string>
    <string name="challenge_root_detection_bypass_description">
        This page implements a simple root detection. Your task is to run the application on a
        rooted android device/emulator and  then try to bypass the root detection.
    </string>
    <string name="challenge_root_detection_bypass_button">
        check for root
    </string>
    <string name="challenge_root_detection_bypass_check_passed">Rooted device identified!</string>
    <string name="challenge_root_detection_bypass_check_failed">You\'ve got a clean device!</string>

    <string name="challenge_secure_encryption">Secure Encryption</string>
    <string name="challenge_secure_encryption_description">
        Secure Encryption
    </string>
    <string name="challenge_secure_encryption_description_button">encrypt / decrypt</string>

    <string name="challenge_library_call">Library Call</string>
    <string name="challenge_library_call_description">
        Android applications allow the use of native C/C++/C# code. This might introduce further vulnerabilities.
        Your task is to analyse the library and build your own application that can use the library.
        In the second step you can try to identify a vulnerability in the library.
    </string>
    <string name="challenge_library_call_input">Enter your text here</string>

    <string name="start_page_welcome">
        Hello,\nWelcome to the OWASP Ruhrpott Android Workshop.\n\n
        This application was designed for training purposes and is intended to give an overview about
        common vulnerabilities in mobile applications and also to introduce tools which might be useful
        during penetration tests of mobile applications.\n\n
        Click on the menu and start a challenge!
    </string>
</resources>

package ruhrpott.owasp.com.vuln_app_1;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v4.app.FragmentTransaction;

import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;

import android.widget.TextView;

import ruhrpott.owasp.com.vuln_app_1.challenges.AuthBrute;
import ruhrpott.owasp.com.vuln_app_1.challenges.AuthorisedArea_1;
import ruhrpott.owasp.com.vuln_app_1.challenges.AuthorisedArea_2;
import ruhrpott.owasp.com.vuln_app_1.challenges.BasicHTTPRequest;
import ruhrpott.owasp.com.vuln_app_1.challenges.BasicHTTPSRequest;
import ruhrpott.owasp.com.vuln_app_1.challenges.SecureEncryption;
import ruhrpott.owasp.com.vuln_app_1.challenges.HiddenThings;
import ruhrpott.owasp.com.vuln_app_1.challenges.LibraryCall;
import ruhrpott.owasp.com.vuln_app_1.challenges.LogcatOutput;
import ruhrpott.owasp.com.vuln_app_1.challenges.GetUsedToTheTools;
import ruhrpott.owasp.com.vuln_app_1.challenges.RootDetectionBypass;
import ruhrpott.owasp.com.vuln_app_1.challenges.SSLPinning;

public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {

    /**
     * The {@link android.support.v4.view.PagerAdapter} that will provide
     * fragments for each of the sections. We use a
     * {@link FragmentPagerAdapter} derivative, which will keep every
     * loaded fragment in memory. If this becomes too memory intensive, it
     * may be best to switch to a
     * {@link android.support.v4.app.FragmentStatePagerAdapter}.
     */
    public static Context context;
//    private SectionsPagerAdapter mSectionsPagerAdapter;
    private DrawerLayout mDrawer;
//    private FragmentTransaction mFragmentTransaction;
//    private FragmentManager mFragmentManager;

    /**
     * The {@link ViewPager} that will host the section contents.
     */
//    private ViewPager mViewPager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        MainActivity.context = getApplicationContext();

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Create the adapter that will return a fragment for each
        // primary sections of the activity.
//        mFragmentManager = getSupportFragmentManager();
//        mSectionsPagerAdapter = new SectionsPagerAdapter(mFragmentManager);
//        mFragmentTransaction = mFragmentManager.beginTransaction();

        // Set up the ViewPager with the sections adapter.
//        mViewPager = (ViewPager) findViewById(R.id.container);
//        mViewPager.setAdapter(mSectionsPagerAdapter);
        Fragment fragment;
        try {
            fragment = (Fragment) StartPage.newInstance();

            // Insert the fragment by replacing any existing fragment
            FragmentManager fragmentManager = getSupportFragmentManager();
            fragmentManager.beginTransaction().replace(R.id.main_content, fragment).commit();
        } catch (Exception e) {
            e.printStackTrace();
        }

        //Set Toolbar Text
        android.support.v7.widget.Toolbar mToolbar = (android.support.v7.widget.Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(mToolbar);

        // Create the drawer button
        mDrawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, mDrawer, mToolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        mDrawer.setDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);

        // Get the intent that started this activity
        Intent intent = getIntent();
        Uri data = intent.getData();

        // Figure out what to do based on the intent type
        if (intent.getType() != null && intent.getType().indexOf("text/plain") != -1 && intent.getAction().equals("ruhrpott.owasp.com.vuln_app_1.auth")) {
            String x = intent.getStringExtra("x");
            AuthBrute c = new AuthBrute();
            c.auth(x);
        }

        if (intent.getType() != null && intent.getType().indexOf("text/plain") != -1 && intent.getAction().equals("ruhrpott.owasp.com.vuln_app_1.loggedin")) {
            FragmentManager fm = getSupportFragmentManager();
            AuthorisedArea_2 f =  new AuthorisedArea_2();
            fm.beginTransaction().add(R.id.main_content,f).commit();
        }

    }


//    //The following is currently not in use as we do not use the settings tab, but might be later
//    @Override
//    public boolean onCreateOptionsMenu(Menu menu) {
//        // Inflate the menu; this adds items to the action bar if it is present.
//        getMenuInflater().inflate(R.menu.menu_main, menu);
//        return true;
//    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_about) {
            Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://github.com/OWASP-Ruhrpott/owasp-workshop-android-pentest"));
            startActivity(browserIntent);
            return true;
        } else if(id == R.id.action_twitter) {
            Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://twitter.com/OWASPRuhrpott"));
            startActivity(browserIntent);
            return true;
        } else if(id == R.id.action_wiki) {
            Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.owasp.org/index.php/OWASP_German_Chapter_Stammtisch_Initiative/Ruhrpott"));
            startActivity(browserIntent);
            return true;
        } else if(id == R.id.action_hidden) {
            FragmentManager fm = getSupportFragmentManager();
            AuthorisedArea_2 f =  new AuthorisedArea_2();
            fm.beginTransaction().add(R.id.main_content,f).commit();
            return true;
        }

        return super.onOptionsItemSelected(item);
    }


    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {
        /**
         * The fragment argument representing the section number for this
         * fragment.
         */
        private static final String ARG_SECTION_NUMBER = "section_number";

        public PlaceholderFragment() {
        }

        /**
         * Returns a new instance of this fragment for the given section
         * number.
         */
        public static PlaceholderFragment newInstance(int sectionNumber) {
            PlaceholderFragment fragment = new PlaceholderFragment();
            Bundle args = new Bundle();
            args.putInt(ARG_SECTION_NUMBER, sectionNumber);
            fragment.setArguments(args);
            return fragment;
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                                 Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_main, container, false);
            TextView textView = (TextView) rootView.findViewById(R.id.section_label);

            textView.setText(getString(R.string.section_format, getArguments().getInt(ARG_SECTION_NUMBER)));
            return rootView;
        }
    }

    /**
     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to
     * one of the sections/tabs/pages.
     */
    public class SectionsPagerAdapter extends FragmentPagerAdapter {

        public SectionsPagerAdapter(FragmentManager fm) {
            super(fm);
        }

        //Edit below for further challenges
        @Override
        public Fragment getItem(int position) {
            switch(position){
                case 0:  return StartPage.newInstance();
                case 1:  return GetUsedToTheTools.newInstance();
                case 2:  return HiddenThings.newInstance();
                case 3:  return LogcatOutput.newInstance();
                case 4:  return BasicHTTPRequest.newInstance();
                case 5:  return BasicHTTPSRequest.newInstance();
                case 6:  return SSLPinning.newInstance();
                case 7:  return AuthorisedArea_1.newInstance();
                case 8:  return AuthBrute.newInstance();
                case 9:  return RootDetectionBypass.newInstance();
                case 10: return SecureEncryption.newInstance();
                case 11: return LibraryCall.newInstance();
                default: return PlaceholderFragment.newInstance(position + 1);
            }
        }

        @Override
        public int getCount() {
            // Change here for number of challenges
            return 12;
        }

    }

    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem menuItem) {

        // Create a new fragment and specify the fragment to show based on nav item clicked
        Intent browserIntent;
        Fragment fragment = null;
        Class fragmentClass = null;

        switch(menuItem.getItemId()) {
            case R.id.challenge_1:
                fragmentClass = GetUsedToTheTools.class;
                break;
            case R.id.challenge_2:
                fragmentClass = HiddenThings.class;
                break;
            case R.id.challenge_3:
                fragmentClass = LogcatOutput.class;
                break;
            case R.id.challenge_4:
                fragmentClass = BasicHTTPRequest.class;
                break;
            case R.id.challenge_5:
                fragmentClass = BasicHTTPSRequest.class;
                break;
            case R.id.challenge_6:
                fragmentClass = SSLPinning.class;
                break;
            case R.id.challenge_7:
                fragmentClass = AuthorisedArea_1.class;
                break;
            case R.id.challenge_8:
                fragmentClass = AuthBrute.class;
                break;
            case R.id.challenge_9:
                fragmentClass = RootDetectionBypass.class;
                break;
            case R.id.challenge_10:
                fragmentClass = SecureEncryption.class;
                break;
            case R.id.challenge_11:
                fragmentClass = LibraryCall.class;
                break;
            case R.id.nav_home:
                fragmentClass = StartPage.class;
                break;
            case R.id.nav_about_us:
                browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://github.com/OWASP-Ruhrpott/owasp-workshop-android-pentest"));
                startActivity(browserIntent);
                break;
            case R.id.nav_twitter:
                browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://twitter.com/OWASPRuhrpott"));
                startActivity(browserIntent);
                break;
            case R.id.nav_wiki:
                browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.owasp.org/index.php/OWASP_German_Chapter_Stammtisch_Initiative/Ruhrpott"));
                startActivity(browserIntent);
                break;
            case R.id.action_hidden:
                FragmentManager fm = getSupportFragmentManager();
                AuthorisedArea_2 f =  new AuthorisedArea_2();
                fm.beginTransaction().add(R.id.container,f).commit();
                break;
            default:
                fragmentClass = StartPage.class;
        }

        if(fragmentClass != null){
            try {
                fragment = (Fragment) fragmentClass.newInstance();
                // Insert the fragment by replacing any existing fragment
                FragmentManager fragmentManager = getSupportFragmentManager();
                fragmentManager.beginTransaction().replace(R.id.main_content, fragment).commit();
            } catch (Exception e) {
                e.printStackTrace();
                return false;
            }

            // Highlight the selected item has been done by NavigationView
            menuItem.setChecked(true);
            // Set action bar title
            setTitle(menuItem.getTitle());
            // Close the navigation drawer
        }
        mDrawer.closeDrawers();
        return true;
    }
}
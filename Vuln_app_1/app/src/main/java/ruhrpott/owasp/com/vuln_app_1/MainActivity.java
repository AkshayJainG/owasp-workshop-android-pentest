package ruhrpott.owasp.com.vuln_app_1;

import android.content.Intent;
import android.net.Uri;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;

import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;

import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    /**
     * The {@link android.support.v4.view.PagerAdapter} that will provide
     * fragments for each of the sections. We use a
     * {@link FragmentPagerAdapter} derivative, which will keep every
     * loaded fragment in memory. If this becomes too memory intensive, it
     * may be best to switch to a
     * {@link android.support.v4.app.FragmentStatePagerAdapter}.
     */
    private SectionsPagerAdapter mSectionsPagerAdapter;

    /**
     * The {@link ViewPager} that will host the section contents.
     */
    private ViewPager mViewPager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Create the adapter that will return a fragment for each
        // primary sections of the activity.
        mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());

        // Set up the ViewPager with the sections adapter.
        mViewPager = (ViewPager) findViewById(R.id.container);
        mViewPager.setAdapter(mSectionsPagerAdapter);

        //Set Toolbar Text
        android.support.v7.widget.Toolbar mToolbar = (android.support.v7.widget.Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(mToolbar);
        getSupportActionBar().setTitle("OWASP Ruhrpott Workshop");


        // Get the intent that started this activity
        Intent intent = getIntent();
        Uri data = intent.getData();

        // Figure out what to do based on the intent type
        if (intent.getType() != null && intent.getType().indexOf("text/plain") != -1 && intent.getAction().equals("ruhrpott.owasp.com.vuln_app_1.auth")) {
            String x = intent.getStringExtra("x");
            String y = intent.getStringExtra("y");
            Authenticate_intent c = new Authenticate_intent();
            c.auth(x);
        }

        if (intent.getType() != null && intent.getType().indexOf("text/plain") != -1 && intent.getAction().equals("ruhrpott.owasp.com.vuln_app_1.loggedin")) {
            FragmentManager fm = getSupportFragmentManager();
            Authorise2 f =  new Authorise2();
            fm.beginTransaction().add(R.id.main_content,f).commit();
        }

    }


    //The following is currently not in use as we do not use the settings tab, but might be later
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_about) {
            Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://github.com/OWASP-Ruhrpott/owasp-workshop-android-pentest"));
            startActivity(browserIntent);
            return true;
        } else if(id == R.id.action_twitter) {
            Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://twitter.com/OWASPRuhrpott"));
            startActivity(browserIntent);
            return true;
        } else if(id == R.id.action_wiki) {
            Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://www.owasp.org/index.php/OWASP_German_Chapter_Stammtisch_Initiative/Ruhrpott"));
            startActivity(browserIntent);
            return true;
        } else if(id == R.id.action_hidden) {
            FragmentManager fm = getSupportFragmentManager();
            Authorise2 f =  new Authorise2();
            fm.beginTransaction().add(R.id.main_content,f).commit();
            return true;
        }

        return super.onOptionsItemSelected(item);
    }


    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {
        /**
         * The fragment argument representing the section number for this
         * fragment.
         */
        private static final String ARG_SECTION_NUMBER = "section_number";

        public PlaceholderFragment() {
        }

        /**
         * Returns a new instance of this fragment for the given section
         * number.
         */
        public static PlaceholderFragment newInstance(int sectionNumber) {
            PlaceholderFragment fragment = new PlaceholderFragment();
            Bundle args = new Bundle();
            args.putInt(ARG_SECTION_NUMBER, sectionNumber);
            fragment.setArguments(args);
            return fragment;
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                                 Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_main, container, false);
            TextView textView = (TextView) rootView.findViewById(R.id.section_label);

            textView.setText(getString(R.string.section_format, getArguments().getInt(ARG_SECTION_NUMBER)));
            return rootView;
        }
    }

    /**
     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to
     * one of the sections/tabs/pages.
     */
    public class SectionsPagerAdapter extends FragmentPagerAdapter {

        public SectionsPagerAdapter(FragmentManager fm) {
            super(fm);
        }

        //Edit below for further challenges
        @Override
        public Fragment getItem(int position) {
            switch(position){
                case 0:  return Hello_Page.newInstance();
                case 1:  return Prepare.newInstance();
                case 2:  return Hidden_Things.newInstance();
                case 3 : return  Basic_Http.newInstance();
                case 4 : return  Logcat_Output.newInstance();
                case 5 : return  Basic_Https.newInstance();
                case 6: return Authorise.newInstance();
                case 7:  return Authenticate_intent.newInstance();
                case 8: return Root_Detection.newInstance();
                case 9: return Encryption.newInstance();
                default: return PlaceholderFragment.newInstance(position + 1);
            }
        }

        @Override
        public int getCount() {
            // Change here for number of challenges
            return 10;
        }

    }
}